//Illusory Software | IDA SigMaker For All Platforms. (.idc)

#include <idc.idc>

static IllusorySigMaker_GenerateSignature(start, end) 
{
    auto signature = "";
    auto separator = " ";
    auto addr;
    
    for (addr = start; addr < end; addr++) 
    {
        auto loop;
        auto byteValue = Byte(addr);
        auto op_size = IllusorySigMaker_isOpcodeX(addr, byteValue);
        if (op_size != 0) 
        {
            signature = signature + separator + IllusorySigMaker_ByteToHex(byteValue);
            for (loop = 0; loop < op_size-1; loop++)
            {
                signature = signature + separator +"?";   
            }
            addr = addr+(op_size-1);
        } 
    }

    return signature;
}

static IllusorySigMaker_isOpcodeX(addr, byteValue) 
{ 
    auto address = addr;
    auto instructionSize = ItemSize(address);
    //auto operandType = get_operand_type(address, operandIndex);

    return instructionSize;
}

static IllusorySigMaker_ByteToHex(byteValue) 
{
    auto hex = "0123456789ABCDEF";
    return hex[(byteValue >> 4) & 0xF] + hex[byteValue & 0xF];
}

static IllusorySigMaker_StartSigMaker()
{
    auto selection_start = SelStart();
    auto selection_end = SelEnd();
    
    if (selection_start == BADADDR || selection_end == BADADDR) 
    {
        Message("Please select a valid block of data first.\n");
    } 
    else 
    {
        auto signature = IllusorySigMaker_GenerateSignature(selection_start, selection_end);
        Message("Generated Byte Array Signature: %s\n\n", signature);
    }
}

static IllusorySigMaker_ShowYesNoPrompt() {
    auto choice = AskYN(1, "Do you want to continue and generate a signature?");
    return choice;
}

static IllusorySigMaker() 
{
    auto prompt = IllusorySigMaker_ShowYesNoPrompt();
    if (prompt == 1) {
        Message("User selected Yes.\n");
        IllusorySigMaker_StartSigMaker();
    } else if (prompt == 0){
        Message("User selected No.\n");
    }
    else if (prompt == -1){
        Message("User selected Cancel.\n");
    }
}

static main()
{
    
    AddHotkey("Ctrl-Alt-S", "IllusorySigMaker");

}
